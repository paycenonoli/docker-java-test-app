name: docker-java-test-app

on:
  push:
    branches: [main]
jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3.3.0
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Cache maven project
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and test project with maven
        run: mvn -B package --file pom.xml
  publish-job:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: actions/setup-java@v1
        with:
          java-version: 14
      - run: mvn -B package --file pom.xml -DskipTests
      - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: Package
          path: staging
          
  build-docker-image:
    name: publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [build_and_test]

    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Build container image
      run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
    - name: Publish Docker image
      run: docker push ${{ secrets.DOCKER_REPO }}


      
